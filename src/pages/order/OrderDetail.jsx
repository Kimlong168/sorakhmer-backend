import { useEffect, useState } from "react";
import Layout from "../../layouts/Layout";
import { useParams } from "react-router-dom";
import { collection, getDocs, query, where } from "firebase/firestore";
import { db } from "../../firebase-config";
import Loading from "../../components/Loading";
import OrderDetailCard from "./OrderDetailCard";

const OrderDetail = () => {
  const { id: orderParams } = useParams();
  const [order, setOrder] = useState(null);
  // to store the document id to update later
  const [itemId, setItemId] = useState(null);
  // fetch order base on id or orderParams
  useEffect(() => {
    const fetchorder = async () => {
      try {
        // Query to get the order with the specified customer name
        const querySnapshot = await getDocs(
          query(collection(db, "orders"), where("orderId", "==", orderParams))
        );

        // Check if any documents match the query
        if (!querySnapshot.empty) {
          // Get the first document (assuming there's only one matching document)
          const docSnap = querySnapshot.docs[0];
          const order = docSnap.data();

          // Set the order state
          setOrder(order);

          // Set the item id state
          setItemId(docSnap.id);

          console.log("item id:", docSnap.id);
        } else {
          console.log("No matching documents.");
        }

        // get order by id , the id which generated by firebase
        // const docRef = doc(db, "orders", orderParams);
        // const docSnap = await getDoc(docRef);
        // if (docSnap.exists()) {
        //   const order = docSnap.data();
        //   setOrder(order);
        //   console.log("orders", order);
        // } else {
        //   console.log("No such document!");
        // }
      } catch (error) {
        console.error("Error fetching document:", error);
      }
    };

    fetchorder();
  }, [orderParams]);

  // loading if order is null
  if (!order) {
    return (
      <>
        <Layout>
          <Loading />
        </Layout>
      </>
    );
  }

  return (
    <Layout>
      <div>
        {/* order detail card component */}
        <OrderDetailCard {...order} id={itemId} />
      </div>
    </Layout>
  );
};

export default OrderDetail;
